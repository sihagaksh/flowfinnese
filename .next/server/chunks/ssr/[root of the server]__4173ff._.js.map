{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/utils/supabase/server.ts"],"sourcesContent":["\nimport { createServerClient, type CookieOptions } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n\nexport const createClient = (cookieStore: ReturnType<typeof cookies>) => {\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        async getAll() {\n          const store = await cookieStore;\n          return store.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(async ({ name, value, options }) => {\n              const store = await cookieStore;\n              store.set(name, value, options);\n            });\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    },\n  );\n};\n"],"names":[],"mappings":";;;AACA;AAAA;;AAGO,MAAM,eAAe,CAAC;IAC3B,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,MAAM;gBACJ,MAAM,QAAQ,MAAM;gBACpB,OAAO,MAAM,MAAM;YACrB;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;wBAClD,MAAM,QAAQ,MAAM;wBACpB,MAAM,GAAG,CAAC,MAAM,OAAO;oBACzB;gBACF,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/app/login/page.tsx"],"sourcesContent":["import { createClient } from '../../..//utils/supabase/server'\nimport { cookies } from 'next/headers'\n\nexport default async function Page() {\n  const cookieStore = cookies();\n  const supabase = createClient(cookieStore);\n\n  const { data: todos } = await supabase.from('todos').select()\n\n  return (\n    <ul>\n      {todos?.map((todo) => (\n        <li>{todo}</li>\n      ))}\n    </ul>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC5B,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,MAAM,WAAW,CAAA,GAAA,2HAAA,CAAA,eAAY,AAAD,EAAE;IAE9B,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,SAAS,MAAM;IAE3D,qBACE,8OAAC;kBACE,OAAO,IAAI,CAAC,qBACX,8OAAC;0BAAI;;;;;;;;;;;AAIb"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}