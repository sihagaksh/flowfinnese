{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,gBAAgB,mKAAgB,OAAO;AAE7C,MAAM,eAAe,mKAAgB,MAAM;AAE3C,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,mKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,mKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,sMAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,mKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/app/new/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport MaxWidthWrapper from \"@/components/MaxWidthWrapper\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Check, Plus, Settings2 } from 'lucide-react';\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\n\ntype Group = {\n    id: number;\n    name: string;\n    users: User[];\n    expenses: Expense[];\n};\n\ntype User = {\n    id: number;\n    name: string;\n    balance: string;\n    expenses: Expense[];\n};\n\ntype Expense = {\n    id: number;\n    description: string;\n    amount: number;\n    date: string;\n    paidBy: User;\n    splitWith: User[];\n};\n\nconst groups: Group[] = [\n    {\n        id: 1,\n        name: \"Trip to Paris\",\n        users: [\n            { id: 1, name: \"John Doe\", balance: \"$0\", expenses: [] },\n            { id: 2, name: \"Jane Smith\", balance: \"$25\", expenses: [] },\n            { id: 3, name: \"Alice Johnson\", balance: \"$-25\", expenses: [] },\n        ],\n        expenses: [],\n    },\n    {\n        id: 2,\n        name: \"Weekend Hangout\",\n        users: [\n            { id: 1, name: \"John Doe\", balance: \"$0\", expenses: [] },\n            { id: 2, name: \"Jane Smith\", balance: \"$25\", expenses: [] },\n        ],\n        expenses: [],\n    },\n];\n\nexport default function Page() {\n    const [selectedGroup, setSelectedGroup] = useState(groups[0]);\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n    const [isAddingGroup, setIsAddingGroup] = useState(false);\n    const [newGroupName, setNewGroupName] = useState(\"\");\n    const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\n    const [expenseDescription, setExpenseDescription] = useState(\"\");\n    const [expenseAmount, setExpenseAmount] = useState(0);\n    const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n\n    const handleGroupBalances = () => {\n        const updatedGroups = groups.map((group) => {\n            const totalExpenses = group.expenses.reduce((total, expense) => total + expense.amount, 0);\n            const averageExpense = totalExpenses / group.users.length;\n            group.users = group.users.map((user) => {\n                const userExpenses = group.expenses.filter((expense) => expense.paidBy.id === user.id || expense.splitWith.some((splitUser) => splitUser.id === user.id));\n                const userExpenseTotal = userExpenses.reduce((total, expense) => total + expense.amount, 0);\n                const userBalance = userExpenseTotal - averageExpense;\n                return { ...user, balance: `$${userBalance}` };\n            });\n            return group;\n        });\n        setGroups(updatedGroups);\n    };\n\n    const handleGroupSelect = (group: Group) => {\n        setSelectedGroup(group);\n    };\n\n    const handleAddExpense = () => {\n        setIsExpenseDialogOpen(true);\n    };\n\n    const handleAddExpenseSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (expenseDescription.trim() === \"\" || expenseAmount === 0 || selectedUsers.length === 0) {\n            alert(\"Please fill in all the fields.\");\n            return;\n        }\n        const paidBy = selectedGroup.users.find((user) => user.name === selectedUsers[0]);\n        const splitWith = selectedUsers.slice(1).map((userName) => selectedGroup.users.find((user) => user.name === userName));\n        const newExpense: Expense = {\n            id: selectedGroup.expenses.length + 1,\n            description: expenseDescription,\n            amount: expenseAmount,\n            date: new Date().toISOString(),\n            paidBy: paidBy!,\n            splitWith,\n        };\n        selectedGroup.expenses.push(newExpense);\n        handleGroupBalances();\n        setIsExpenseDialogOpen(false);\n        setExpenseDescription(\"\");\n        setExpenseAmount(0);\n        setSelectedUsers([]);\n    }\n\n    const handleSettleUp = () => {\n        alert(\"Feature not implemented yet. This button can trigger a modal for settling expenses.\");\n    };\n\n    function handleAddGroup(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        event.preventDefault();\n        if (newGroupName.trim() === \"\") {\n            alert(\"Group name cannot be empty.\");\n            return;\n        }\n        const newGroup = {\n            id: groups.length + 1,\n            name: newGroupName,\n            users: [],\n            expenses: [],\n        };\n        groups.push(newGroup);\n        setNewGroupName(\"\");\n        setIsAddingGroup(false);\n    }\n\n    const handleAddUser = () => {\n        //implement a feature to add a user to a group which is active\n        return 0;\n    }\n    return (\n        <div className=\"min-h-[calc(100vh-64px)] bg-gray-50 dark:bg-inherit\">\n            <MaxWidthWrapper className=\"min-w-[60vw]\">\n                <div className=\"h-[calc(100vh-64px)] grid place-content-center\">\n                    <Card className=\"max-w-5xl w-full h-[70vh] border-2 border-green-600 dark:border-rose-800 rounded-xl shadow-lg overflow-scroll\">\n                        <div className=\"grid h-full md:grid-cols-[250px_1fr_250px]\">\n                            {/* Left Sidebar */}\n                            <div className=\"border-r dark:border-gray-800 p-4 space-y-4\">\n                                <nav className=\"space-y-2\">\n                                    <Button variant=\"ghost\" className=\"w-full justify-start\">\n                                        Dashboard\n                                    </Button>\n                                    <Button variant=\"ghost\" className=\"w-full justify-start\">\n                                        Recent Activity\n                                    </Button>\n                                </nav>\n                                <div className=\"pt-4 border-t dark:border-gray-800\">\n                                    <h3 className=\"text-sm font-medium mb-2\">GROUPS</h3>\n                                    {groups.map((group) => (\n                                        <Button\n                                            key={group.id}\n                                            variant=\"ghost\"\n                                            className={`w-full justify-start ${\n                                                group.id === selectedGroup.id\n                                                    ? \"text-green-600 dark:text-rose-600 font-bold\"\n                                                    : \"text-gray-700 dark:text-gray-400\"\n                                            }`}\n                                            onClick={() => handleGroupSelect(group)}\n                                        >\n                                            {group.name}\n                                        </Button>\n                                    ))}\n                                    {isAddingGroup ? (\n                                        <div className=\"mt-2 flex flex-col items-start justify-normal space-y-2\">\n                                            <input\n                                                type=\"text\"\n                                                value={newGroupName}\n                                                onChange={(e) => setNewGroupName(e.target.value)}\n                                                placeholder=\"Group name\"\n                                                className=\"flex-1 p-1 max-w-56 border focus:ring-green-800 dark:focus:border-rose-800 border-green-600 rounded dark:bg-gray-800 dark:ring-rose-700\"\n                                            />\n                                            <div className=\"flex space-x-2\">\n                                                <Button\n                                                    onClick={handleAddGroup}\n                                                    className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                                                >\n                                                    Save\n                                                </Button>\n                                                <Button\n                                                    variant=\"ghost\"\n                                                    onClick={() => {\n                                                        setIsAddingGroup(false);\n                                                        setNewGroupName(\"\");\n                                                    }}\n                                                >\n                                                    Cancel\n                                                </Button>\n                                            </div>\n                                        </div>\n                                    ) : (\n                                        <Button\n                                            variant=\"ghost\"\n                                            className=\"w-full justify-start text-green-600 dark:text-rose-600 mt-2\"\n                                            onClick={() => setIsAddingGroup(true)}\n                                        >\n                                            <Plus className=\"w-4 h-4 mr-2\" />\n                                            Add Group\n                                        </Button>\n                                    )}\n                                    \n                                </div>\n                                <div className=\"pt-4 border-t dark:border-gray-800\">\n                                                  <h3 className=\"text-sm font-medium mb-2\">INVITE FRIENDS</h3>\n                                                  <div className=\"mt-2 flex flex-col items-start justify-normal space-y-2\">\n                                                      <input\n                                                        type=\"text\"\n                                                        value={newGroupName}\n                                                        onChange={(e) => setNewGroupName(e.target.value)}\n                                                        placeholder=\"Email or Username\"\n                                                        className=\"ml-1 flex-1 p-1 max-w-52 border focus:ring-green-800 dark:focus:border-rose-800 border-green-600 rounded dark:bg-gray-800 dark:ring-rose-700\"\n                                                      />\n                                                      <div className=\"flex space-x-2\">\n                                                      <Button\n                                                        onClick={handleAddUser}\n                                                        className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                                                      >\n                                                        Save\n                                                      </Button>\n                                                      {/* <Button\n                                                        variant=\"ghost\"\n                                                        onClick={() => {\n                                                          setIsAddingGroup(false);\n                                                          setNewGroupName(\"\");\n                                                        }}\n                                                      >\n                                                        Cancel\n                                                      </Button> */}\n                                                        </div>\n                                                    </div>\n                                                    </div>\n                            </div>\n                            \n                            {/* Main Content */}\n                            <div className=\"p-6 flex flex-col items-center justify-center text-center\">\n                                <h1 className=\"text-xl font-bold mb-4\">{selectedGroup.name}</h1>\n                                <div className=\"rounded-full bg-green-50 dark:bg-rose-900/20 p-6 mb-4\">\n                                    <Check className=\"w-12 h-12 text-green-600 dark:text-rose-400\" />\n                                </div>\n                                <h2 className=\"text-2xl font-semibold mb-2\">All Settled Up!</h2>\n                                <p className=\"text-gray-600 dark:text-gray-400\">\n                                    You have no pending expenses in this group.\n                                </p>\n                                <div className=\"mt-6 space-x-4\">\n                                    <Button\n                                        className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                                        onClick={handleAddExpense}\n                                    >\n                                        Add an expense\n                                    </Button>\n                                    <Button variant=\"outline\" onClick={handleSettleUp}>\n                                        Settle up\n                                    </Button>\n                                </div>\n                            </div>\n                            \n                            {/* Right Sidebar */}\n                            <div className=\"border-l dark:border-gray-800 p-4\">\n                                <div className=\"flex items-center justify-between mb-4\">\n                                    <h3 className=\"text-sm font-medium\">GROUP BALANCES</h3>\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        onClick={() => setIsDialogOpen(true)}\n                                    >\n                                        <Settings2 className=\"w-4 h-4\" />\n                                    </Button>\n                                </div>\n                                <div className=\"space-y-4 hidden md:block\">\n                                    {selectedGroup.users.map((user) => (\n                                        <div key={user.id} className=\"flex items-center gap-3\">\n                                            <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-800\" />\n                                            <div className=\"flex-1\">\n                                                <p className=\"text-sm font-medium\">{user.name}</p>\n                                                <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                                    {user.balance}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n            </MaxWidthWrapper>\n            \n            {/* Dialog for Group Balances */}\n            <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>Group Balances</DialogTitle>\n                    </DialogHeader>\n                    <div className=\"space-y-4\">\n                        {selectedGroup.users.map((user) => (\n                            <div\n                                key={user.id}\n                                className=\"flex items-center justify-between gap-4\"\n                            >\n                                <p className=\"text-sm font-medium\">{user.name}</p>\n                                <p className=\"text-sm text-gray-700 dark:text-gray-400\">\n                                    {user.balance}\n                                </p>\n                            </div>\n                        ))}\n                    </div>\n                    <DialogFooter>\n                        <Button onClick={() => setIsDialogOpen(false)}>Close</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n            \n            {/* Dialog for Adding Expense */}\n            <Dialog open={isExpenseDialogOpen} onOpenChange={setIsExpenseDialogOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>Add an Expense</DialogTitle>\n                    </DialogHeader>\n                    <form onSubmit={handleAddExpenseSubmit}>\n                        <div className=\"space-y-4\">\n                            <div>\n                                <Label htmlFor=\"expenseDescription\">Description</Label>\n                                <Input\n                                    id=\"expenseDescription\"\n                                    value={expenseDescription}\n                                    onChange={(e) => setExpenseDescription(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <Label htmlFor=\"expenseAmount\">Amount</Label>\n                                <Input\n                                    id=\"expenseAmount\"\n                                    type=\"number\"\n                                    value={expenseAmount}\n                                    onChange={(e) => setExpenseAmount(parseFloat(e.target.value))}\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <Label>Paid By</Label>\n                                <div className=\"space-y-2\">\n                                    {selectedGroup.users.map((user) => (\n                                        <div key={user.id} className=\"flex items-center space-x-2\">\n                                            <Checkbox\n                                                id={`user-${user.id}`}\n                                                checked={selectedUsers.includes(user.name)}\n                                                onCheckedChange={(checked) => {\n                                                    setSelectedUsers(\n                                                        checked\n                                                            ? [user.name]\n                                                            : selectedUsers.filter((name) => name !== user.name)\n                                                    );\n                                                }}\n                                            />\n                                            <Label htmlFor={`user-${user.id}`}>{user.name}</Label>\n                                        </div>\n                                    ))}\n                                    </div>\n                            </div>\n                            <div>\n                                <Label>Split with</Label>\n                                <div className=\"space-y-2\">\n                                    {selectedGroup.users.map((user) => (\n                                        <div key={user.id} className=\"flex items-center space-x-2\">\n                                            <Checkbox\n                                                id={`user-${user.id}`}\n                                                checked={selectedUsers.includes(user.name)}\n                                                onCheckedChange={(checked) => {\n                                                    setSelectedUsers(\n                                                        checked\n                                                            ? [...selectedUsers, user.name]\n                                                            : selectedUsers.filter((name) => name !== user.name)\n                                                    );\n                                                }}\n                                            />\n                                            <Label htmlFor={`user-${user.id}`}>{user.name}</Label>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                        <DialogFooter className=\"mt-4\">\n                            <Button type=\"submit\">Add Expense</Button>\n                        </DialogFooter>\n                    </form>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}