{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,gBAAgB,mKAAgB,OAAO;AAE7C,MAAM,eAAe,mKAAgB,MAAM;AAE3C,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,mKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,mKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,sMAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,mKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-3.5 w-3.5 fill-primary\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,2KAAoB,IAAI;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,2KAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,2KAAoB,IAAI;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gMACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,2KAAoB,SAAS;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,2KAAoB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/app/test1/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport MaxWidthWrapper from \"@/components/MaxWidthWrapper\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Check, Plus, Settings2, ArrowRight } from 'lucide-react';\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\n\ntype User = {\n  id: number;\n  name: string;\n  balance: number;\n  expenses: Expense[];\n};\n\ntype Expense = {\n  id: number;\n  amount: number;\n  description: string;\n  date: string;\n  paidBy: User;\n  splitBetween: User[];\n  splitType: 'equal' | 'exact' | 'percentage' | 'shares';\n  splitDetails: { [userId: number]: number };\n};\n\ntype Group = {\n  id: number;\n  name: string;\n  users: User[];\n  expenses: Expense[];\n};\n\nconst initialGroups: Group[] = [\n  {\n    id: 1,\n    name: \"Trip to Paris\",\n    users: [\n      { id: 1, name: \"John Doe\", balance: 0, expenses: [] },\n      { id: 2, name: \"Jane Smith\", balance: 0, expenses: [] },\n    ],\n    expenses: [],\n  },\n  {\n    id: 2,\n    name: \"Weekend Hangout\",\n    users: [\n      { id: 1, name: \"John Doe\", balance: 0, expenses: [] },\n      { id: 2, name: \"Jane Smith\", balance: 0, expenses: [] },\n      { id: 3, name: \"Alice Johnson\", balance: 0, expenses: [] },\n      { id: 4, name: \"Bob Brown\", balance: 0, expenses: [] },\n    ],\n    expenses: [],\n  },\n];\n\nexport default function Page() {\n  const [groups, setGroups] = useState<Group[]>(initialGroups);\n  const [selectedGroup, setSelectedGroup] = useState<Group>(groups[0]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAddingGroup, setIsAddingGroup] = useState(false);\n  const [newGroupName, setNewGroupName] = useState(\"\");\n  const [isDashboardDialogOpen, setIsDashboardDialogOpen] = useState(false);\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\n  const [newExpense, setNewExpense] = useState<Partial<Expense>>({});\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [isSettleUpDialogOpen, setIsSettleUpDialogOpen] = useState(false);\n  const [loggedInUser] = useState<User>(selectedGroup.users.find(u => u.id === 1)!);\n\n  useEffect(() => {\n    const storedGroups = localStorage.getItem(\"groups\");\n    if (storedGroups) {\n      const parsedGroups = JSON.parse(storedGroups);\n      setGroups(parsedGroups);\n      setSelectedGroup(parsedGroups[0]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"groups\", JSON.stringify(groups));\n  }, [groups]);\n\n  const handleGroupSelect = (group: Group) => {\n    setSelectedGroup(group);\n  };\n\n  const handleAddGroup = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n    if (newGroupName.trim() === \"\") {\n      alert(\"Group name cannot be empty.\");\n      return;\n    }\n    const newGroup: Group = {\n      id: groups.length + 1,\n      name: newGroupName,\n      users: [],\n      expenses: [],\n    };\n    setGroups([...groups, newGroup]);\n    setNewGroupName(\"\");\n    setIsAddingGroup(false);\n  };\n\n  const handleAddUser = () => {\n    if (newUserName.trim() === \"\") {\n      alert(\"User name cannot be empty.\");\n      return;\n    }\n    const newUser: User = {\n      id: selectedGroup.users.length + 1,\n      name: newUserName,\n      balance: 0,\n      expenses: [],\n    };\n    const updatedGroup = {\n      ...selectedGroup,\n      users: [...selectedGroup.users, newUser],\n    };\n    setGroups(groups.map(group => group.id === selectedGroup.id ? updatedGroup : group));\n    setSelectedGroup(updatedGroup);\n    setNewUserName(\"\");\n  };\n\n  const handleAddExpense = () => {\n    setIsExpenseDialogOpen(true);\n  };\n\n  const handleExpenseSubmit = () => {\n    if (!newExpense.description || !newExpense.amount || !newExpense.paidBy || !newExpense.splitType) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const splitDetails: { [userId: number]: number } = {};\n    let totalSplit = 0;\n\n    switch (newExpense.splitType) {\n      case 'equal':\n        const equalShare = newExpense.amount! / newExpense.splitBetween!.length;\n        newExpense.splitBetween!.forEach(user => {\n          splitDetails[user.id] = equalShare;\n        });\n        break;\n      case 'exact':\n      case 'percentage':\n      case 'shares':\n        newExpense.splitBetween!.forEach(user => {\n          const value = parseFloat(newExpense.splitDetails![user.id].toString());\n          if (newExpense.splitType === 'percentage') {\n            splitDetails[user.id] = (newExpense.amount! * value) / 100;\n          } else if (newExpense.splitType === 'shares') {\n            totalSplit += value;\n          } else {\n            splitDetails[user.id] = value;\n          }\n        });\n        if (newExpense.splitType === 'shares') {\n          newExpense.splitBetween!.forEach(user => {\n            const shares = parseFloat(newExpense.splitDetails![user.id].toString());\n            splitDetails[user.id] = (newExpense.amount! * shares) / totalSplit;\n          });\n        }\n        break;\n    }\n\n    const expense: Expense = {\n      id: selectedGroup.expenses.length + 1,\n      amount: newExpense.amount!,\n      description: newExpense.description!,\n      date: new Date().toISOString(),\n      paidBy: newExpense.paidBy!,\n      splitBetween: newExpense.splitBetween!,\n      splitType: newExpense.splitType!,\n      splitDetails: splitDetails,\n    };\n\n    const updatedGroup = {\n      ...selectedGroup,\n      expenses: [...selectedGroup.expenses, expense],\n      users: selectedGroup.users.map(user => {\n        if (user.id === expense.paidBy.id) {\n          return { ...user, balance: user.balance + expense.amount };\n        } else if (expense.splitBetween.find(u => u.id === user.id)) {\n          return { ...user, balance: user.balance - splitDetails[user.id] };\n        }\n        return user;\n      }),\n    };\n\n    setGroups(groups.map(group => group.id === selectedGroup.id ? updatedGroup : group));\n    setSelectedGroup(updatedGroup);\n    setNewExpense({});\n    setIsExpenseDialogOpen(false);\n  };\n\n  const handleSettleUp = () => {\n    setIsSettleUpDialogOpen(true);\n  };\n\n  const calculateSettlements = () => {\n    const users = selectedGroup.users;\n    const settlements: { from: User; to: User; amount: number }[] = [];\n\n    const sortedUsers = [...users].sort((a, b) => a.balance - b.balance);\n    let i = 0;\n    let j = sortedUsers.length - 1;\n\n    while (i < j) {\n      const debtor = sortedUsers[i];\n      const creditor = sortedUsers[j];\n      const amount = Math.min(Math.abs(debtor.balance), creditor.balance);\n\n      if (amount > 0) {\n        settlements.push({ from: debtor, to: creditor, amount });\n        debtor.balance += amount;\n        creditor.balance -= amount;\n      }\n\n      if (debtor.balance === 0) i++;\n      if (creditor.balance === 0) j--;\n    }\n\n    return settlements;\n  };\n\n  const totalGroupSpending = selectedGroup.expenses.reduce((sum, expense) => sum + expense.amount, 0);\n  const userTotalSpending = (userId: number) => {\n    return selectedGroup.expenses\n      .filter(expense => expense.paidBy.id === userId)\n      .reduce((sum, expense) => sum + expense.amount, 0);\n  };\n\n  const sortedExpenses = [...selectedGroup.expenses].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  const userTransactions = calculateSettlements().filter(\n    settlement => settlement.from.id === loggedInUser.id || settlement.to.id === loggedInUser.id\n  );\n\n  return (\n    <div className=\"min-h-[calc(100vh-64px)] bg-gray-50 dark:bg-inherit\">\n      <MaxWidthWrapper className=\"min-w-[60vw]\">\n        <div className=\"h-[calc(100vh-64px)] grid place-content-center\">\n          <Card className=\"max-w-5xl w-full h-[70vh] border-2 border-green-600 dark:border-rose-800 rounded-xl shadow-lg overflow-scroll\">\n            <div className=\"grid h-full md:grid-cols-[250px_1fr_250px]\">\n              {/* Left Sidebar */}\n              <div className=\"border-r dark:border-gray-800 p-4 space-y-4\">\n                <nav className=\"space-y-2\">\n                  <Button variant=\"ghost\" className=\"w-full justify-start\" onClick={() => setIsDashboardDialogOpen(true)}>\n                    Dashboard\n                  </Button>\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\n                    Recent Activity\n                  </Button>\n                </nav>\n                <div className=\"pt-4 border-t dark:border-gray-800\">\n                  <h3 className=\"text-sm font-medium mb-2\">GROUPS</h3>\n                  {groups.map((group) => (\n                    <Button\n                      key={group.id}\n                      variant=\"ghost\"\n                      className={`w-full justify-start ${\n                        group.id === selectedGroup.id\n                          ? \"text-green-600 dark:text-rose-600 font-bold\"\n                          : \"text-gray-700 dark:text-gray-400\"\n                      }`}\n                      onClick={() => handleGroupSelect(group)}\n                    >\n                      {group.name}\n                    </Button>\n                  ))}\n                  {isAddingGroup ? (\n                    <div className=\"mt-2 flex flex-col items-start justify-normal space-y-2\">\n                      <input\n                        type=\"text\"\n                        value={newGroupName}\n                        onChange={(e) => setNewGroupName(e.target.value)}\n                        placeholder=\"Group name\"\n                        className=\"flex-1 p-1 max-w-56 border focus:ring-green-800 dark:focus:border-rose-800 border-green-600 rounded dark:bg-gray-800 dark:ring-rose-700\"\n                      />\n                      <div className=\"flex space-x-2\">\n                        <Button\n                          onClick={handleAddGroup}\n                          className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                        >\n                          Save\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          onClick={() => {\n                            setIsAddingGroup(false);\n                            setNewGroupName(\"\");\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                      </div>\n                    </div>\n                  ) : (\n                    <Button\n                      variant=\"ghost\"\n                      className=\"w-full justify-start text-green-600 dark:text-rose-600 mt-2\"\n                      onClick={() => setIsAddingGroup(true)}\n                    >\n                      <Plus className=\"w-4 h-4 mr-2\" />\n                      Add Group\n                    </Button>\n                  )}\n                </div>\n                <div className=\"pt-4 border-t dark:border-gray-800\">\n                  <h3 className=\"text-sm font-medium mb-2\">ADD USER TO GROUP</h3>\n                  <div className=\"mt-2 flex flex-col items-start justify-normal space-y-2\">\n                    <input\n                      type=\"text\"\n                      value={newUserName}\n                      onChange={(e) => setNewUserName(e.target.value)}\n                      placeholder=\"User name\"\n                      className=\"ml-1 flex-1 p-1 max-w-52 border focus:ring-green-800 dark:focus:border-rose-800 border-green-600 rounded dark:bg-gray-800 dark:ring-rose-700\"\n                    />\n                    <div className=\"flex space-x-2\">\n                      <Button\n                        onClick={handleAddUser}\n                        className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                      >\n                        Add User\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Main Content */}\n              <div className=\"p-6 flex flex-col items-center justify-center text-center\">\n                <h1 className=\"text-xl font-bold mb-4\">{selectedGroup.name}</h1>\n                {userTransactions.length === 0 ? (\n                  <>\n                    <div className=\"rounded-full bg-green-50 dark:bg-rose-900/20 p-6 mb-4\">\n                      <Check className=\"w-12 h-12 text-green-600 dark:text-rose-400\" />\n                    </div>\n                    <h2 className=\"text-2xl font-semibold mb-2\">All Settled Up!</h2>\n                    <p className=\"text-gray-600 dark:text-gray-400\">\n                      You have no pending expenses in this group.\n                    </p>\n                  </>\n                ) : (\n                  <>\n                    <h2 className=\"text-2xl font-semibold mb-2\">Your Transactions</h2>\n                    {userTransactions.map((transaction, index) => (\n                      <div key={index} className=\"flex justify-between w-full mb-2\">\n                        <span>\n                          {transaction.from.id === loggedInUser.id\n                            ? `You owe ${transaction.to.name}`\n                            : `${transaction.from.name} owes you`}\n                        </span>\n                        <span>${transaction.amount.toFixed(2)}</span>\n                      </div>\n                    ))}\n                  </>\n                )}\n                <div className=\"mt-6 space-x-4\">\n                  <Button\n                    className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                    onClick={handleAddExpense}\n                  >\n                    Add an expense\n                  </Button>\n                  <Button variant=\"outline\" onClick={handleSettleUp}>\n                    Settle up\n                  </Button>\n                </div>\n              </div>\n\n              {/* Right Sidebar */}\n              <div className=\"border-l dark:border-gray-800 p-4\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-sm font-medium\">GROUP BALANCES</h3>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => setIsDialogOpen(true)}\n                  >\n                    <Settings2 className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n                <div className=\"space-y-4 hidden md:block\">\n                  {selectedGroup.users.map((user) => (\n                    <div key={user.id} className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-800\" />\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm font-medium\">{user.name}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          ${user.balance.toFixed(2)}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </MaxWidthWrapper>\n\n      {/* Dialog for Group Balances */}\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Group Balances</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            {selectedGroup.users.map((user) => (\n              <div\n                key={user.id}\n                className=\"flex items-center justify-between gap-4\"\n              >\n                <p className=\"text-sm font-medium\">{user.name}</p>\n                <p className=\"text-sm text-gray-700 dark:text-gray-400\">\n                  ${user.balance.toFixed(2)}\n                </p>\n              </div>\n            ))}\n          </div>\n          <DialogFooter>\n            <Button onClick={() => setIsDialogOpen(false)}>Close</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Dialog for Dashboard */}\n      <Dialog open={isDashboardDialogOpen} onOpenChange={setIsDashboardDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Dashboard</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <p>Total Group Spending: ${totalGroupSpending.toFixed(2)}</p>\n            {selectedGroup.users.map((user) => (\n              <div key={user.id} className=\"flex justify-between\">\n                <span>{user.name}'s Spending:</span>\n                <span>${userTotalSpending(user.id).toFixed(2)}</span>\n              </div>\n            ))}\n          </div>\n          <DialogFooter>\n            <Button onClick={() => setIsDashboardDialogOpen(false)}>Close</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Dialog for Adding Expense */}\n      <Dialog open={isExpenseDialogOpen} onOpenChange={setIsExpenseDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Add an Expense</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"expenseDescription\">Description</Label>\n              <Input\n                id=\"expenseDescription\"\n                value={newExpense.description || \"\"}\n                onChange={(e) => setNewExpense({ ...newExpense, description: e.target.value })}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"expenseAmount\">Amount</Label>\n              <Input\n                id=\"expenseAmount\"\n                type=\"number\"\n                value={newExpense.amount || \"\"}\n                onChange={(e) => setNewExpense({ ...newExpense, amount: parseFloat(e.target.value) })}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"expensePaidBy\">Paid By</Label>\n              <Select onValueChange={(value) => setNewExpense({ ...newExpense, paidBy: selectedGroup.users.find(u => u.id === parseInt(value)) })}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select user\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {selectedGroup.users.map((user) => (\n                    <SelectItem key={user.id} value={user.id.toString()}>{user.name}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label>Split Between</Label>\n              {selectedGroup.users.map((user) => (\n                <div key={user.id} className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id={`user-${user.id}`}\n                    checked={newExpense.splitBetween?.some(u => u.id === user.id)}\n                    onCheckedChange={(checked) => {\n                      const updatedSplitBetween = checked\n                        ? [...(newExpense.splitBetween || []), user]\n                        : (newExpense.splitBetween || []).filter(u => u.id !== user.id);\n                      setNewExpense({ ...newExpense, splitBetween: updatedSplitBetween });\n                    }}\n                  />\n                  <Label htmlFor={`user-${user.id}`}>{user.name}</Label>\n                </div>\n              ))}\n            </div>\n            <div>\n              <Label>Split Type</Label>\n              <RadioGroup\n                onValueChange={(value: string) => setNewExpense({ ...newExpense, splitType: value as 'equal' | 'exact' | 'percentage' | 'shares' })}\n                defaultValue=\"equal\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"equal\" id=\"equal\" />\n                  <Label htmlFor=\"equal\">Equal</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"exact\" id=\"exact\" />\n                  <Label htmlFor=\"exact\">Exact Amounts</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"percentage\" id=\"percentage\" />\n                  <Label htmlFor=\"percentage\">Percentages</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"shares\" id=\"shares\" />\n                  <Label htmlFor=\"shares\">Shares</Label>\n                </div>\n              </RadioGroup>\n            </div>\n            {newExpense.splitType && newExpense.splitType !== 'equal' && (\n              <div>\n                <Label>Split Details</Label>\n                {newExpense.splitBetween?.map((user) => (\n                  <div key={user.id} className=\"flex items-center space-x-2\">\n                    <Label htmlFor={`split-${user.id}`}>{user.name}</Label>\n                    <Input\n                      id={`split-${user.id}`}\n                      type=\"number\"\n                      value={newExpense.splitDetails?.[user.id] || \"\"}\n                      onChange={(e) => {\n                        const updatedSplitDetails = {\n                          ...(newExpense.splitDetails || {}),\n                          [user.id]: parseFloat(e.target.value),\n                        };\n                        setNewExpense({ ...newExpense, splitDetails: updatedSplitDetails });\n                      }}\n                      placeholder={newExpense.splitType === 'percentage' ? 'Percentage' : newExpense.splitType === 'shares' ? 'Shares' : 'Amount'}\n                    />\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <DialogFooter>\n            <Button onClick={handleExpenseSubmit}>Add Expense</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Dialog for Settle Up */}\n      <Dialog open={isSettleUpDialogOpen} onOpenChange={setIsSettleUpDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Settle Up</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            {calculateSettlements().map((settlement, index) => (\n              <div key={index} className=\"flex items-center justify-between\">\n                <span>{settlement.from.name} pays {settlement.to.name}</span>\n                <span>${settlement.amount.toFixed(2)}</span>\n              </div>\n            ))}\n          </div>\n          <DialogFooter>\n            <Button onClick={() => setIsSettleUpDialogOpen(false)}>Close</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}