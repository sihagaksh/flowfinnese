{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,gBAAgB,mKAAgB,OAAO;AAE7C,MAAM,eAAe,mKAAgB,MAAM;AAE3C,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,mKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,mKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,sMAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,mKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,sMAAM,UAAU,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 709, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/app/new/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Check, Plus, Settings2, Trash, Edit, FileText, Filter, History, Download, Upload } from 'lucide-react';\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { addDays, addWeeks, addMonths, addYears } from 'date-fns';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend);\n\n// Types\ntype Group = {\n    id: number;\n    name: string;\n    users: User[];\n    expenses: Expense[];\n    categories: string[];\n    recurringExpenses: RecurringExpense[];\n    baseCurrency: Currency;\n    notifications: Notification[];\n};\n\ntype User = {\n    id: number;\n    name: string;\n    balance: string;\n    expenses: Expense[];\n};\n\ntype Expense = {\n    id: number;\n    description: string;\n    amount: number;\n    date: string;\n    paidBy: User;\n    splitWith: User[];\n    category: string;\n    notes: string[];\n    splitOption: SplitOption;\n    splitDetails: { [userId: number]: number };\n};\n\ntype RecurringExpense = Expense & {\n    frequency: 'daily' | 'weekly' | 'monthly' | 'yearly';\n    endDate: string | null;\n};\n\ntype Notification = {\n    id: number;\n    userId: number;\n    message: string;\n    read: boolean;\n    createdAt: string;\n};\n\ntype Currency = {\n    code: string;\n    name: string;\n    symbol: string;\n    rate: number;\n};\n\ntype SplitOption = 'equal' | 'exact' | 'percentage' | 'shares';\n\n// Initial data\nconst initialGroups: Group[] = [\n    {\n        id: 1,\n        name: \"Trip to Paris\",\n        users: [\n            { id: 1, name: \"John Doe\", balance: \"$0\", expenses: [] },\n            { id: 2, name: \"Jane Smith\", balance: \"$25\", expenses: [] },\n            { id: 3, name: \"Alice Johnson\", balance: \"$-25\", expenses: [] },\n        ],\n        expenses: [],\n        categories: [\"Food\", \"Transportation\", \"Accommodation\", \"Activities\"],\n        recurringExpenses: [],\n        baseCurrency: { code: 'USD', name: 'US Dollar', symbol: '$', rate: 1 },\n        notifications: [],\n    },\n    {\n        id: 2,\n        name: \"Weekend Hangout\",\n        users: [\n            { id: 1, name: \"John Doe\", balance: \"$0\", expenses: [] },\n            { id: 2, name: \"Jane Smith\", balance: \"$25\", expenses: [] },\n        ],\n        expenses: [],\n        categories: [\"Food\", \"Entertainment\"],\n        recurringExpenses: [],\n        baseCurrency: { code: 'USD', name: 'US Dollar', symbol: '$', rate: 1 },\n        notifications: [],\n    },\n];\n\n// Components\nconst RecurringExpenseForm = ({ onSubmit }: { onSubmit: (expense: RecurringExpense) => void }) => {\n    const [description, setDescription] = useState('');\n    const [amount, setAmount] = useState(0);\n    const [frequency, setFrequency] = useState<'daily' | 'weekly' | 'monthly' | 'yearly'>('monthly');\n    const [endDate, setEndDate] = useState<string | null>(null);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        const startDate = new Date();\n        let recurringExpense: RecurringExpense = {\n            id: Date.now(),\n            description,\n            amount,\n            date: startDate.toISOString(),\n            paidBy: { id: 1, name: 'Current User', balance: '0', expenses: [] },\n            splitWith: [],\n            category: 'Recurring',\n            notes: [],\n            frequency,\n            endDate,\n            splitOption: 'equal',\n            splitDetails: {},\n        };\n        onSubmit(recurringExpense);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Input\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                placeholder=\"Description\"\n                required\n            />\n            <Input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(parseFloat(e.target.value))}\n                placeholder=\"Amount\"\n                required\n            />\n            <Select onValueChange={(value: 'daily' | 'weekly' | 'monthly' | 'yearly') => setFrequency(value)}>\n                <SelectTrigger>\n                    <SelectValue placeholder=\"Frequency\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"daily\">Daily</SelectItem>\n                    <SelectItem value=\"weekly\">Weekly</SelectItem>\n                    <SelectItem value=\"monthly\">Monthly</SelectItem>\n                    <SelectItem value=\"yearly\">Yearly</SelectItem>\n                </SelectContent>\n            </Select>\n            <Input\n                type=\"date\"\n                value={endDate || ''}\n                onChange={(e) => setEndDate(e.target.value)}\n                placeholder=\"End Date (optional)\"\n            />\n            <Button type=\"submit\">Add Recurring Expense</Button>\n        </form>\n    );\n};\n\nconst CategoryManagement = ({ categories, onAddCategory, onRemoveCategory }: {\n    categories: string[];\n    onAddCategory: (category: string) => void;\n    onRemoveCategory: (category: string) => void;\n}) => {\n    const [newCategory, setNewCategory] = useState('');\n\n    const handleAddCategory = () => {\n        if (newCategory && !categories.includes(newCategory)) {\n            onAddCategory(newCategory);\n            setNewCategory('');\n        }\n    };\n\n    return (\n        <div>\n            <h3>Manage Categories</h3>\n            <div>\n                <Input\n                    value={newCategory}\n                    onChange={(e) => setNewCategory(e.target.value)}\n                    placeholder=\"New category\"\n                />\n                <Button onClick={handleAddCategory}>Add Category</Button>\n            </div>\n            <ul>\n                {categories.map((category) => (\n                    <li key={category}>\n                        {category}\n                        <Button onClick={() => onRemoveCategory(category)}>Remove</Button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nconst CurrencyConversion = ({ amount, baseCurrency, onCurrencyChange }: {\n    amount: number;\n    baseCurrency: Currency;\n    onCurrencyChange: (newCurrency: Currency) => void;\n}) => {\n    const [currencies, setCurrencies] = useState<Currency[]>([]);\n    const [selectedCurrency, setSelectedCurrency] = useState<Currency>(baseCurrency);\n\n    useEffect(() => {\n        // Simulated API call for currency rates\n        const simulatedRates = {\n            USD: 1,\n            EUR: 0.85,\n            GBP: 0.73,\n            JPY: 110.14,\n        };\n        const currencyList: Currency[] = Object.entries(simulatedRates).map(([code, rate]) => ({\n            code,\n            name: code,\n            symbol: code,\n            rate: rate as number,\n        }));\n        setCurrencies(currencyList);\n    }, []);\n\n    const handleCurrencyChange = (currencyCode: string) => {\n        const newCurrency = currencies.find((c) => c.code === currencyCode);\n        if (newCurrency) {\n            setSelectedCurrency(newCurrency);\n            onCurrencyChange(newCurrency);\n        }\n    };\n\n    return (\n        <div>\n            <Select onValueChange={handleCurrencyChange}>\n                <SelectTrigger>\n                    <SelectValue placeholder=\"Select currency\" />\n                </SelectTrigger>\n                <SelectContent>\n                    {currencies.map((currency) => (\n                        <SelectItem key={currency.code} value={currency.code}>\n                            {currency.code} - {currency.name}\n                        </SelectItem>\n                    ))}\n                </SelectContent>\n            </Select>\n            <p>\n                {amount} {baseCurrency.code} = {(amount * selectedCurrency.rate).toFixed(2)} {selectedCurrency.code}\n            </p>\n        </div>\n    );\n};\n\nconst ExpenseSplitting = ({ amount, users, onSplitChange }: {\n    amount: number;\n    users: User[];\n    onSplitChange: (splitOption: SplitOption, splitDetails: { [userId: number]: number }) => void;\n}) => {\n    const [splitOption, setSplitOption] = useState<SplitOption>('equal');\n    const [splitDetails, setSplitDetails] = useState<{ [userId: number]: number }>({});\n\n    const handleSplitOptionChange = (option: SplitOption) => {\n        setSplitOption(option);\n        let newSplitDetails: { [userId: number]: number } = {};\n\n        switch (option) {\n            case 'equal':\n                const equalShare = amount / users.length;\n                users.forEach((user) => {\n                    newSplitDetails[user.id] = equalShare;\n                });\n                break;\n            case 'exact':\n            case 'percentage':\n            case 'shares':\n                users.forEach((user) => {\n                    newSplitDetails[user.id] = 0;\n                });\n                break;\n        }\n\n        setSplitDetails(newSplitDetails);\n        onSplitChange(option, newSplitDetails);\n    };\n\n    const handleSplitDetailChange = (userId: number, value: number) => {\n        const newSplitDetails = { ...splitDetails, [userId]: value };\n        setSplitDetails(newSplitDetails);\n        onSplitChange(splitOption, newSplitDetails);\n    };\n\n    return (\n        <div>\n            <Select onValueChange={(value: SplitOption) => handleSplitOptionChange(value)}>\n                <SelectTrigger>\n                    <SelectValue placeholder=\"Split option\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"equal\">Split Equally</SelectItem>\n                    <SelectItem value=\"exact\">Split by Exact Amounts</SelectItem>\n                    <SelectItem value=\"percentage\">Split by Percentages</SelectItem>\n                    <SelectItem value=\"shares\">Split by Shares</SelectItem>\n                </SelectContent>\n            </Select>\n            {splitOption !== 'equal' && (\n                <div>\n                    {users.map((user) => (\n                        <div key={user.id}>\n                            <Label>{user.name}</Label>\n                            <Input\n                                type=\"number\"\n                                value={splitDetails[user.id] || 0}\n                                onChange={(e) => handleSplitDetailChange(user.id, parseFloat(e.target.value))}\n                                placeholder={splitOption === 'percentage' ? 'Percentage' : splitOption === 'shares' ? 'Shares' : 'Amount'}\n                            />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst Notifications = ({ notifications, onMarkAsRead }: {\n    notifications: Notification[];\n    onMarkAsRead: (notificationId: number) => void;\n}) => {\n    return (\n        <div>\n            <h3>Notifications</h3>\n            {notifications.length === 0 ? (\n                <p>No new notifications</p>\n            ) : (\n                <ul>\n                    {notifications.map((notification) => (\n                        <li key={notification.id}>\n                            <p>{notification.message}</p>\n                            <p>Created at: {new Date(notification.createdAt).toLocaleString()}</p>\n                            {!notification.read && (\n                                <Button onClick={() => onMarkAsRead(notification.id)}>Mark as Read</Button>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nconst DataVisualization = ({ expenses }: { expenses: Expense[] }) => {\n    const categoryData = expenses.reduce((acc, expense) => {\n        acc[expense.category] = (acc[expense.category] || 0) + expense.amount;\n        return acc;\n    }, {} as { [category: string]: number });\n\n    const barChartData = {\n        labels: Object.keys(categoryData),\n        datasets: [\n            {\n                label: 'Expenses by Category',\n                data: Object.values(categoryData),\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            },\n        ],\n    };\n\n    const pieChartData = {\n        labels: Object.keys(categoryData),\n        datasets: [\n            {\n                data: Object.values(categoryData),\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.6)',\n                    'rgba(54, 162, 235, 0.6)',\n                    'rgba(255, 206, 86, 0.6)',\n                    'rgba(75, 192, 192, 0.6)',\n                    'rgba(153, 102, 255, 0.6)',\n                ],\n            },\n        ],\n    };\n\n    return (\n        <div>\n            <h3>Expense Analysis</h3>\n            <div style={{ width: '50%', display: 'inline-block' }}>\n                <Bar data={barChartData} options={{ responsive: true }} />\n            </div>\n            <div style={{ width: '50%', display: 'inline-block' }}>\n                <Pie data={pieChartData} options={{ responsive: true }} />\n            </div>\n        </div>\n    );\n};\n\n// Main component\nexport default function Page() {\n    const [groups, setGroups] = useState<Group[]>(initialGroups);\n    const [selectedGroup, setSelectedGroup] = useState<Group | null>(null);\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n    const [isAddingGroup, setIsAddingGroup] = useState(false);\n    const [newGroupName, setNewGroupName] = useState(\"\");\n    const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\n    const [expenseDescription, setExpenseDescription] = useState(\"\");\n    const [expenseAmount, setExpenseAmount] = useState(0);\n    const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n    const [newUserName, setNewUserName] = useState(\"\");\n    const [expenseCategory, setExpenseCategory] = useState(\"\");\n    const [expenseNotes, setExpenseNotes] = useState(\"\");\n    const [filterCategory, setFilterCategory] = useState(\"\");\n    const [sortBy, setSortBy] = useState(\"date\");\n    const [sortOrder, setSortOrder] = useState(\"desc\");\n    const [notifications, setNotifications] = useState<Notification[]>([]);\n    const [baseCurrency, setBaseCurrency] = useState<Currency>({ code: 'USD', name: 'US Dollar', symbol: '$', rate: 1 });\n\n    useEffect(() => {\n        const storedGroups = localStorage.getItem(\"groups\");\n        if (storedGroups) {\n            const parsedGroups = JSON.parse(storedGroups);\n            setGroups(parsedGroups);\n            setSelectedGroup(parsedGroups[0]);\n        } else {\n            setSelectedGroup(groups[0]);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (groups.length > 0) {\n            localStorage.setItem(\"groups\", JSON.stringify(groups));\n        }\n    }, [groups]);\n\n    const handleGroupSelect = (group: Group) => {\n        setSelectedGroup(group);\n    };\n\n    const handleAddGroup = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        event.preventDefault();\n        if (newGroupName.trim() === \"\") {\n            alert(\"Group name cannot be empty.\");\n            return;\n        }\n        const newGroup: Group = {\n            id: groups.length + 1,\n            name: newGroupName,\n            users: [],\n            expenses: [],\n            categories: [\"Food\", \"Transportation\", \"Accommodation\", \"Activities\"],\n            recurringExpenses: [],\n            baseCurrency: { code: 'USD', name: 'US Dollar', symbol: '$', rate: 1 },\n            notifications: [],\n        };\n        setGroups([...groups, newGroup]);\n        setNewGroupName(\"\");\n        setIsAddingGroup(false);\n    };\n\n    const handleAddUser = () => {\n        if (newUserName.trim() === \"\") {\n            alert(\"User name cannot be empty.\");\n            return;\n        }\n        const newUser: User = {\n            id: selectedGroup!.users.length + 1,\n            name: newUserName,\n            balance: \"$0\",\n            expenses: [],\n        };\n        const updatedGroup = {\n            ...selectedGroup!,\n            users: [...selectedGroup!.users, newUser],\n        };\n        setGroups(groups.map(group => group.id === selectedGroup!.id ? updatedGroup : group));\n        setSelectedGroup(updatedGroup);\n        setNewUserName(\"\");\n        alert(`${newUserName} has been added to the group \"${selectedGroup!.name}\".`);\n    };\n\n    const calculateCashFlow = () => {\n        const balances = selectedGroup!.users.map((user) => ({\n            id: user.id,\n            name: user.name,\n            balance: parseFloat(user.balance.replace('$', '')),\n        }));\n\n        const transactions: { from: string; to: string; amount: number }[] = [];\n\n        while (true) {\n            balances.sort((a, b) => a.balance - b.balance);\n\n            const minBalance = balances[0];\n            const maxBalance = balances[balances.length - 1];\n\n            if (Math.abs(minBalance.balance) < 0.01 && Math.abs(maxBalance.balance) < 0.01) {\n                break;\n            }\n\n            const settleAmount = Math.min(Math.abs(minBalance.balance), maxBalance.balance);\n\n            transactions.push({\n                from: minBalance.name,\n                to: maxBalance.name,\n                amount: parseFloat(settleAmount.toFixed(2)),\n            });\n\n            minBalance.balance += settleAmount;\n            maxBalance.balance -= settleAmount;\n        }\n\n        return transactions;\n    };\n\n    const handleAddExpenseSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (expenseDescription.trim() === \"\" || expenseAmount <= 0 || selectedUsers.length === 0) {\n            alert(\"Please fill out all fields correctly.\");\n            return;\n        }\n\n        const paidByUser = selectedGroup!.users.find((user) => selectedUsers[0] === user.name);\n        if (!paidByUser) {\n            alert(\"Please select a valid user who paid the expense.\");\n            return;\n        }\n\n        const splitWithUsers = selectedGroup!.users.filter((user) => selectedUsers.slice(1).includes(user.name));\n\n        const newExpense: Expense = {\n            id: selectedGroup!.expenses.length + 1,\n            description: expenseDescription,\n            amount: expenseAmount,\n            date: new Date().toISOString(),\n            paidBy: paidByUser,\n            splitWith: splitWithUsers,\n            category: expenseCategory,\n            notes: expenseNotes ? [expenseNotes] : [],\n            splitOption: 'equal',\n            splitDetails: {},\n        };\n\n        const updatedUsers = selectedGroup!.users.map(user => {\n            if (user.id === paidByUser.id) {\n                return {\n                    ...user,\n                    balance: `$${(parseFloat(user.balance.replace('$', '')) + expenseAmount).toFixed(2)}`,\n                    expenses: [...user.expenses, newExpense],\n                };\n            }\n            if (splitWithUsers.some(splitUser => splitUser.id === user.id)) {\n                const splitAmount = expenseAmount / (splitWithUsers.length + 1);\n                return {\n                    ...user,\n                    balance: `$${(parseFloat(user.balance.replace('$', '')) - splitAmount).toFixed(2)}`,\n                    expenses: [...user.expenses, newExpense],\n                };\n            }\n            return user;\n        });\n\n        const updatedGroup = {\n            ...selectedGroup!,\n            expenses: [...selectedGroup!.expenses, newExpense],\n            users: updatedUsers,\n        };\n\n        setGroups(groups.map(group => group.id === selectedGroup!.id ? updatedGroup : group));\n        setSelectedGroup(updatedGroup);\n\n        setExpenseDescription(\"\");\n        setExpenseAmount(0);\n        setSelectedUsers([]);\n        setExpenseCategory(\"\");\n        setExpenseNotes(\"\");\n        setIsExpenseDialogOpen(false);\n    };\n\n    const handleAddExpense = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        event.preventDefault();\n        setIsExpenseDialogOpen(true);\n    };\n\n    const handleSettleUp = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        event.preventDefault();\n        const transactions = calculateCashFlow();\n        const transactionDetails = transactions\n            .map((t) => `${t.from} owes ${t.to} $${t.amount}`)\n            .join(\"\\n\");\n        alert(transactionDetails || \"All cash flows are minimized!\");\n    };\n\n    const handleDeleteGroup = (groupId: number) => {\n        const updatedGroups = groups.filter(group => group.id !== groupId);\n        setGroups(updatedGroups);\n        if (selectedGroup!.id === groupId) {\n            setSelectedGroup(updatedGroups[0] || null);\n        }\n    };\n\n    const handleEditGroupName = (groupId: number) => {\n        const group = groups.find(g => g.id === groupId);\n        if (!group) return;\n\n        const newName = prompt(\"Enter new group name:\", group.name);\n        if (newName && newName.trim() !== \"\") {\n            const updatedGroups = groups.map(g =>\n                g.id === groupId ? { ...g, name: newName } : g\n            );\n            setGroups(updatedGroups);\n            if (selectedGroup!.id === groupId) {\n                setSelectedGroup({ ...selectedGroup!, name: newName });\n            }\n        }\n    };\n\n    const handleAddNoteToExpense = (expenseId: number) => {\n        const expense = selectedGroup!.expenses.find(e => e.id === expenseId);\n        if (!expense) return;\n\n        const note = prompt(\"Add a note to this expense:\");\n        if (note && note.trim() !== \"\") {\n            const updatedExpenses = selectedGroup!.expenses.map(e =>\n                e.id === expenseId ? { ...e, notes: [...e.notes, note] } : e\n            );\n            const updatedGroup = { ...selectedGroup!, expenses: updatedExpenses };\n            setGroups(groups.map(g => g.id === selectedGroup!.id ? updatedGroup : g));\n            setSelectedGroup(updatedGroup);\n        }\n    };\n\n    const handleViewExpenseDetails = (expenseId: number) => {\n        const expense = selectedGroup!.expenses.find(e => e.id === expenseId);\n        if (!expense) return;\n\n        alert(`\n            Expense Details:\n            Description: ${expense.description}\n            Amount: $${expense.amount}\n            Date: ${new Date(expense.date).toLocaleDateString()}\n            Paid By: ${expense.paidBy.name}\n            Split With: ${expense.splitWith.map(u => u.name).join(\", \")}\n            Category: ${expense.category}\n            Notes: ${expense.notes.join(\"\\n\")}\n        `);\n    };\n\n    const handleFilterGroupByUser = (userId: number) => {\n        const user = selectedGroup!.users.find(u => u.id === userId);\n        if (!user) return;\n\n        const filteredExpenses = selectedGroup!.expenses.filter(\n            expense => expense.paidBy.id === userId || expense.splitWith.some(u => u.id === userId)\n        );\n\n        alert(`\n            Expenses involving ${user.name}:\n            ${filteredExpenses.map(e => `${e.description}: $${e.amount}`).join(\"\\n\")}\n        `);\n    };\n\n    const handleViewTransactionHistory = (userId: number) => {\n        const user = selectedGroup!.users.find(u => u.id === userId);\n        if (!user) return;\n\n        alert(`\n            Transaction History for ${user.name}:\n            ${user.expenses.map(e => `${e.description}: $${e.amount}`).join(\"\\n\")}\n        `);\n    };\n\n    const handleExportGroupData = () => {\n        const dataStr = JSON.stringify(selectedGroup, null, 2);\n        const dataUri = `data:application/json;charset=utf-8,${encodeURIComponent(dataStr)}`;\n        const exportFileDefaultName = `${selectedGroup!.name}_export.json`;\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n    };\n\n    const handleImportGroupData = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                try {\n                    const importedGroup: Group = JSON.parse(e.target?.result as string);\n                    setGroups([...groups, importedGroup]);\n                    alert(`Group \"${importedGroup.name}\" has been imported successfully.`);\n                } catch (error) {\n                    alert(\"Error importing group data. Please check the file format.\");\n                }\n            };\n            reader.readAsText(file);\n        }\n    };\n\n    const handleAddRecurringExpense = (expense: RecurringExpense) => {\n        const updatedGroup = {\n            ...selectedGroup!,\n            recurringExpenses: [...selectedGroup!.recurringExpenses, expense],\n        };\n        setGroups(groups.map(group => group.id === selectedGroup!.id ? updatedGroup : group));\n        setSelectedGroup(updatedGroup);\n    };\n\n    const handleAddCategory = (category: string) => {\n        const updatedGroup = {\n            ...selectedGroup!,\n            categories: [...selectedGroup!.categories, category],\n        };\n        setGroups(groups.map(group => group.id === selectedGroup!.id ? updatedGroup : group));\n        setSelectedGroup(updatedGroup);\n    };\n\n    const handleRemoveCategory = (category: string) => {\n        const updatedGroup = {\n            ...selectedGroup!,\n            categories: selectedGroup!.categories.filter(c => c !== category),\n        };\n        setGroups(groups.map(group => group.id === selectedGroup!.id ? updatedGroup : group));\n        setSelectedGroup(updatedGroup);\n    };\n\n    const handleCurrencyChange = (newCurrency: Currency) => {\n        const updatedGroup = {\n            ...selectedGroup!,\n            baseCurrency: newCurrency,\n        };\n        setGroups(groups.map(group => group.id === selectedGroup!.id ? updatedGroup : group));\n        setSelectedGroup(updatedGroup);\n    };\n\n    const handleSplitChange = (splitOption: SplitOption, splitDetails: { [userId: number]: number }) => {\n        // This function would be called when changing the split option for an expense\n        // You might want to update the current expense or apply this to a new expense being created\n    };\n\n    const handleMarkNotificationAsRead = (notificationId: number) => {\n        const updatedNotifications = selectedGroup!.notifications.map(notification =>\n            notification.id === notificationId ? { ...notification, read: true } : notification\n        );\n        const updatedGroup = {\n            ...selectedGroup!,\n            notifications: updatedNotifications,\n        };\n        setGroups(groups.map(group => group.id === selectedGroup!.id ? updatedGroup : group));\n        setSelectedGroup(updatedGroup);\n    };\n\n    const filteredExpenses = selectedGroup\n        ? selectedGroup.expenses\n            .filter(expense => !filterCategory || expense.category === filterCategory)\n            .sort((a, b) => {\n                if (sortBy === \"date\") {\n                    return sortOrder === \"asc\"\n                        ? new Date(a.date).getTime() - new Date(b.date).getTime()\n                        : new Date(b.date).getTime() - new Date(a.date).getTime();\n                } else if (sortBy === \"amount\") {\n                    return sortOrder === \"asc\" ? a.amount - b.amount : b.amount - a.amount;\n                }\n                return 0;\n            })\n        : [];\n\n    return (\n        <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900\">\n            <div className=\"container mx-auto px-4 py-8\">\n                <Card className=\"w-full\">\n                    <CardHeader>\n                        <CardTitle>Splitwise Clone</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        {selectedGroup ? (\n                            <Tabs defaultValue=\"overview\">\n                                <TabsList className=\"grid w-full grid-cols-5\">\n                                    <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n                                    <TabsTrigger value=\"expenses\">Expenses</TabsTrigger>\n                                    <TabsTrigger value=\"balances\">Balances</TabsTrigger>\n                                    <TabsTrigger value=\"recurring\">Recurring</TabsTrigger>\n                                    <TabsTrigger value=\"analysis\">Analysis</TabsTrigger>\n                                </TabsList>\n                                <TabsContent value=\"overview\">\n                                    <h2 className=\"text-2xl font-bold mb-4\">{selectedGroup.name}</h2>\n                                    <div className=\"grid grid-cols-2 gap-4\">\n                                        <div>\n                                            <h3 className=\"text-xl font-semibold mb-2\">Group Members</h3>\n                                            <ul>\n                                                {selectedGroup.users.map(user => (\n                                    <li key={user.id} className=\"flex justify-between items-center\">\n                                        <span>{user.name}</span>\n                                        <span>{user.balance}</span>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <div>\n                            <h3 className=\"text-xl font-semibold mb-2\">Recent Expenses</h3>\n                            <ul>\n                                {selectedGroup.expenses.slice(0, 5).map(expense => (\n                                    <li key={expense.id} className=\"flex justify-between items-center\">\n                                        <span>{expense.description}</span>\n                                        <span>${expense.amount.toFixed(2)}</span>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"mt-4\">\n                        <Button onClick={handleAddExpense}>Add Expense</Button>\n                        <Button onClick={handleSettleUp} className=\"ml-2\">Settle Up</Button>\n                    </div>\n                </TabsContent>\n                <TabsContent value=\"expenses\">\n                    <div className=\"space-y-4\">\n                        <div className=\"flex justify-between items-center\">\n                            <Select onValueChange={(value: string) => setFilterCategory(value)}>\n                                <SelectTrigger className=\"w-[180px]\">\n                                    <SelectValue placeholder=\"Filter by category\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"\">All Categories</SelectItem>\n                                    {selectedGroup.categories.map((category) => (\n                                        <SelectItem key={category} value={category}>\n                                            {category}\n                                        </SelectItem>\n                                    ))}\n                                </SelectContent>\n                            </Select>\n                            <div className=\"flex items-center space-x-2\">\n                                <Label htmlFor=\"sortBy\">Sort by:</Label>\n                                <Select onValueChange={(value: string) => setSortBy(value)}>\n                                    <SelectTrigger className=\"w-[120px]\">\n                                        <SelectValue placeholder=\"Sort by\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                        <SelectItem value=\"date\">Date</SelectItem>\n                                        <SelectItem value=\"amount\">Amount</SelectItem>\n                                    </SelectContent>\n                                </Select>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"icon\"\n                                    onClick={() => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\")}\n                                >\n                                    {sortOrder === \"asc\" ? \"↑\" : \"↓\"}\n                                </Button>\n                            </div>\n                        </div>\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead>Description</TableHead>\n                                    <TableHead>Amount</TableHead>\n                                    <TableHead>Date</TableHead>\n                                    <TableHead>Paid By</TableHead>\n                                    <TableHead>Actions</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {filteredExpenses.map((expense) => (\n                                    <TableRow key={expense.id}>\n                                        <TableCell>{expense.description}</TableCell>\n                                        <TableCell>${expense.amount.toFixed(2)}</TableCell>\n                                        <TableCell>{new Date(expense.date).toLocaleDateString()}</TableCell>\n                                        <TableCell>{expense.paidBy.name}</TableCell>\n                                        <TableCell>\n                                            <Button\n                                                variant=\"ghost\"\n                                                size=\"icon\"\n                                                onClick={() => handleViewExpenseDetails(expense.id)}\n                                            >\n                                                <FileText className=\"h-4 w-4\" />\n                                            </Button>\n                                            <Button\n                                                variant=\"ghost\"\n                                                size=\"icon\"\n                                                onClick={() => handleAddNoteToExpense(expense.id)}\n                                            >\n                                                <Edit className=\"h-4 w-4\" />\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </TabsContent>\n                <TabsContent value=\"balances\">\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>User</TableHead>\n                                <TableHead>Balance</TableHead>\n                                <TableHead>Actions</TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {selectedGroup.users.map((user) => (\n                                <TableRow key={user.id}>\n                                    <TableCell>{user.name}</TableCell>\n                                    <TableCell>{user.balance}</TableCell>\n                                    <TableCell>\n                                        <Button\n                                            variant=\"ghost\"\n                                            size=\"icon\"\n                                            onClick={() => handleFilterGroupByUser(user.id)}\n                                        >\n                                            <Filter className=\"h-4 w-4\" />\n                                        </Button>\n                                        <Button\n                                            variant=\"ghost\"\n                                            size=\"icon\"\n                                            onClick={() => handleViewTransactionHistory(user.id)}\n                                        >\n                                            <History className=\"h-4 w-4\" />\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TabsContent>\n                <TabsContent value=\"recurring\">\n                    <RecurringExpenseForm onSubmit={handleAddRecurringExpense} />\n                    <h3 className=\"text-xl font-semibold mt-4 mb-2\">Recurring Expenses</h3>\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>Description</TableHead>\n                                <TableHead>Amount</TableHead>\n                                <TableHead>Frequency</TableHead>\n                                <TableHead>Next Date</TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {selectedGroup.recurringExpenses.map((expense) => (\n                                <TableRow key={expense.id}>\n                                    <TableCell>{expense.description}</TableCell>\n                                    <TableCell>${expense.amount.toFixed(2)}</TableCell>\n                                    <TableCell>{expense.frequency}</TableCell>\n                                    <TableCell>{new Date(expense.date).toLocaleDateString()}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TabsContent>\n                <TabsContent value=\"analysis\">\n                    <DataVisualization expenses={selectedGroup.expenses} />\n                </TabsContent>\n            </Tabs>\n        ) : (\n            <div className=\"text-center\">\n                <p>No group selected. Please select a group or create a new one.</p>\n                <Button onClick={() => setIsAddingGroup(true)} className=\"mt-4\">Create New Group</Button>\n            </div>\n        )}\n    </CardContent>\n</Card>\n\n{/* Dialogs */}\n<Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n    <DialogContent>\n        <DialogHeader>\n            <DialogTitle>Group Balances</DialogTitle>\n        </DialogHeader>\n        <div className=\"space-y-4\">\n            {selectedGroup?.users.map((user) => (\n                <div\n                    key={user.id}\n                    className=\"flex items-center justify-between gap-4\"\n                >\n                    <p className=\"text-sm font-medium\">{user.name}</p>\n                    <p className=\"text-sm text-gray-700 dark:text-gray-400\">\n                        {user.balance}\n                    </p>\n                </div>\n            ))}\n        </div>\n        <DialogFooter>\n            <Button onClick={() => setIsDialogOpen(false)}>Close</Button>\n        </DialogFooter>\n    </DialogContent>\n</Dialog>\n\n<Dialog open={isExpenseDialogOpen} onOpenChange={setIsExpenseDialogOpen}>\n    <DialogContent>\n        <DialogHeader>\n            <DialogTitle>Add an Expense</DialogTitle>\n        </DialogHeader>\n        <form onSubmit={handleAddExpenseSubmit}>\n            <div className=\"space-y-4\">\n                <div>\n                    <Label htmlFor=\"expenseDescription\">Description</Label>\n                    <Input\n                        id=\"expenseDescription\"\n                        value={expenseDescription}\n                        onChange={(e) => setExpenseDescription(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <Label htmlFor=\"expenseAmount\">Amount</Label>\n                    <Input\n                        id=\"expenseAmount\"\n                        type=\"number\"\n                        value={expenseAmount}\n                        onChange={(e) => setExpenseAmount(parseFloat(e.target.value))}\n                        required\n                    />\n                    <CurrencyConversion\n                        amount={expenseAmount}\n                        baseCurrency={selectedGroup?.baseCurrency || baseCurrency}\n                        onCurrencyChange={handleCurrencyChange}\n                    />\n                </div>\n                <div>\n                    <Label htmlFor=\"expenseCategory\">Category</Label>\n                    <Select onValueChange={(value: string) => setExpenseCategory(value)}>\n                        <SelectTrigger className=\"w-full\">\n                            <SelectValue placeholder=\"Select a category\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                            {selectedGroup?.categories.map((category) => (\n                                <SelectItem key={category} value={category}>\n                                    {category}\n                                </SelectItem>\n                            ))}\n                        </SelectContent>\n                    </Select>\n                </div>\n                <div>\n                    <Label>Paid By</Label>\n                    <div className=\"space-y-2\">\n                        {selectedGroup?.users.map((user) => (\n                            <div key={user.id} className=\"flex items-center space-x-2\">\n                                <Checkbox\n                                    id={`user-paid-${user.id}`}\n                                    checked={selectedUsers[0] === user.name}\n                                    onCheckedChange={(checked) => {\n                                        setSelectedUsers(\n                                            checked\n                                                ? [user.name, ...selectedUsers.slice(1)]\n                                                : selectedUsers.filter((name) => name !== user.name)\n                                        );\n                                    }}\n                                />\n                                <Label htmlFor={`user-paid-${user.id}`}>{user.name}</Label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <Label>Split with</Label>\n                    <div className=\"space-y-2\">\n                        {selectedGroup?.users.map((user) => (\n                            <div key={user.id} className=\"flex items-center space-x-2\">\n                                <Checkbox\n                                    id={`user-split-${user.id}`}\n                                    checked={selectedUsers.slice(1).includes(user.name)}\n                                    onCheckedChange={(checked) => {\n                                        setSelectedUsers(\n                                            checked\n                                                ? [...selectedUsers, user.name]\n                                                : selectedUsers.filter((name) => name !== user.name)\n                                        );\n                                    }}\n                                />\n                                <Label htmlFor={`user-split-${user.id}`}>{user.name}</Label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <ExpenseSplitting\n                    amount={expenseAmount}\n                    users={selectedGroup?.users || []}\n                    onSplitChange={handleSplitChange}\n                />\n                <div>\n                    <Label htmlFor=\"expenseNotes\">Notes</Label>\n                    <Textarea\n                        id=\"expenseNotes\"\n                        value={expenseNotes}\n                        onChange={(e) => setExpenseNotes(e.target.value)}\n                        placeholder=\"Add any additional notes here...\"\n                    />\n                </div>\n            </div>\n            <DialogFooter className=\"mt-4\">\n                <Button type=\"submit\">Add Expense</Button>\n            </DialogFooter>\n        </form>\n    </DialogContent>\n</Dialog>\n</div>\n</div>\n);\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}