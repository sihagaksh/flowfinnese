{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,gBAAgB,sKAAgB,OAAO;AAE7C,MAAM,eAAe,sKAAgB,MAAM;AAE3C,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,sKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,sKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,8JAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,wKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,wKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///home/sihagaksh/Desktop/flowfinnese/src/app/new/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport MaxWidthWrapper from \"@/components/MaxWidthWrapper\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Check, Plus, Settings2 } from 'lucide-react';\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/react-label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\n\nexport default function Page() {\n  const [groups, setGroups] = useState([\n    { id: 1, name: \"Trip to Paris\" },\n    { id: 2, name: \"Weekend Hangout\" },\n  ]);\n  const [selectedGroup, setSelectedGroup] = useState(groups[0]);\n  const [groupBalances, setGroupBalances] = useState([\n    { id: 1, name: \"John Doe\", balance: \"$0\" },\n    { id: 2, name: \"Jane Smith\", balance: \"$25\" },\n  ]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAddingGroup, setIsAddingGroup] = useState(false);\n  const [newGroupName, setNewGroupName] = useState(\"\");\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\n  const [expenseDescription, setExpenseDescription] = useState(\"\");\n  const [expenseAmount, setExpenseAmount] = useState(0);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const handleGroupBalances = () => {\n    setGroupBalances([\n        { id: 1, name: \"John Doe\", balance: \"$0\" },\n        { id: 2, name: \"Jane Smith\", balance: \"$25\" },\n        { id: 3, name: \"Alice Johnson\", balance: \"$-25\" },\n        ]);\n    };\n\n  const handleGroupSelect = (group: { id: number; name: string }) => {\n    setSelectedGroup(group);\n  };\n\n  const handleAddExpense = () => {\n    setIsExpenseDialogOpen(true);\n  };\n\n  const handleAddExpenseSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle adding expense logic here\n    console.log(\"Expense Description:\", expenseDescription);\n    console.log(\"Expense Amount:\", expenseAmount);\n    console.log(\"Selected Users:\", selectedUsers);\n    setIsExpenseDialogOpen(false);\n    setExpenseDescription(\"\");\n    setExpenseAmount(0);\n    setSelectedUsers([]);\n  };\n\n  const handleSettleUp = () => {\n    alert(\"Feature not implemented yet. This button can trigger a modal for settling expenses.\");\n  };\n\n  function handleAddGroup(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n    event.preventDefault();\n    if (newGroupName.trim() === \"\") {\n      alert(\"Group name cannot be empty.\");\n      return;\n    }\n    const newGroup = { id: groups.length + 1, name: newGroupName };\n    setGroups([...groups, newGroup]);\n    setNewGroupName(\"\");\n    setIsAddingGroup(false);\n  }\n  return (\n    <div className=\"min-h-[calc(100vh-64px)] bg-gray-50 dark:bg-inherit\">\n      <MaxWidthWrapper className=\"min-w-[60vw]\">\n        <div className=\"h-[calc(100vh-64px)] grid place-content-center\">\n          <Card className=\"max-w-5xl w-full h-[70vh] border-2 border-green-600 dark:border-rose-800 rounded-xl shadow-lg overflow-scroll\">\n            <div className=\"grid h-full md:grid-cols-[250px_1fr_250px]\">\n              {/* Left Sidebar */}\n              <div className=\"border-r dark:border-gray-800 p-4 space-y-4\">\n                <nav className=\"space-y-2\">\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\n                    Dashboard\n                  </Button>\n                  <Button variant=\"ghost\" className=\"w-full justify-start\">\n                    Recent Activity\n                  </Button>\n                </nav>\n                <div className=\"pt-4 border-t dark:border-gray-800\">\n                  <h3 className=\"text-sm font-medium mb-2\">GROUPS</h3>\n                  {groups.map((group) => (\n                    <Button\n                      key={group.id}\n                      variant=\"ghost\"\n                      className={`w-full justify-start ${\n                        group.id === selectedGroup.id\n                          ? \"text-green-600 dark:text-rose-600 font-bold\"\n                          : \"text-gray-700 dark:text-gray-400\"\n                      }`}\n                      onClick={() => handleGroupSelect(group)}\n                    >\n                      {group.name}\n                    </Button>\n                  ))}\n                  {isAddingGroup ? (\n                    <div className=\"mt-2 flex flex-col items-start justify-normal space-y-2\">\n                      <input\n                        type=\"text\"\n                        value={newGroupName}\n                        onChange={(e) => setNewGroupName(e.target.value)}\n                        placeholder=\"Group name\"\n                        className=\"flex-1 p-1 max-w-56 border focus:ring-green-800 dark:focus:border-rose-800 border-green-600 rounded dark:bg-gray-800 dark:ring-rose-700\"\n                      />\n                      <div className=\"flex space-x-2\">\n                      <Button\n                        onClick={handleAddGroup}\n                        className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                      >\n                        Save\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        onClick={() => {\n                          setIsAddingGroup(false);\n                          setNewGroupName(\"\");\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                        </div>\n                    </div>\n                  ) : (\n                    <Button\n                      variant=\"ghost\"\n                      className=\"w-full justify-start text-green-600 dark:text-rose-600 mt-2\"\n                      onClick={() => setIsAddingGroup(true)}\n                    >\n                      <Plus className=\"w-4 h-4 mr-2\" />\n                      Add Group\n                    </Button>\n                  )}\n                </div>\n              </div>\n\n\n              {/* Main Content */}\n              <div className=\"p-6 flex flex-col items-center justify-center text-center\">\n                <h1 className=\"text-xl font-bold mb-4\">{selectedGroup.name}</h1>\n                <div className=\"rounded-full bg-green-50 dark:bg-rose-900/20 p-6 mb-4\">\n                  <Check className=\"w-12 h-12 text-green-600 dark:text-rose-400\" />\n                </div>\n                <h2 className=\"text-2xl font-semibold mb-2\">All Settled Up!</h2>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  You have no pending expenses in this group.\n                </p>\n                <div className=\"mt-6 space-x-4\">\n                  <Button\n                    className=\"bg-green-600 hover:bg-green-700 dark:bg-rose-600 dark:hover:bg-rose-700\"\n                    onClick={handleAddExpense}\n                  >\n                    Add an expense\n                  </Button>\n                  <Button variant=\"outline\" onClick={handleSettleUp}>\n                    Settle up\n                  </Button>\n                </div>\n              </div>\n\n              {/* Right Sidebar */}\n              <div className=\"border-l dark:border-gray-800 p-4\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-sm font-medium\">GROUP BALANCES</h3>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => setIsDialogOpen(true)}\n                  >\n                    <Settings2 className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n                <div className=\"space-y-4 hidden md:block\">\n                  {groupBalances.map((balance) => (\n                    <div key={balance.id} className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-800\" />\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm font-medium\">{balance.name}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {balance.balance}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </MaxWidthWrapper>\n\n      {/* Dialog for Group Balances */}\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Group Balances</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            {groupBalances.map((balance) => (\n              <div\n                key={balance.id}\n                className=\"flex items-center justify-between gap-4\"\n              >\n                <p className=\"text-sm font-medium\">{balance.name}</p>\n                <p className=\"text-sm text-gray-700 dark:text-gray-400\">\n                  {balance.balance}\n                </p>\n              </div>\n            ))}\n          </div>\n          <DialogFooter>\n            <Button onClick={() => setIsDialogOpen(false)}>Close</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n      {/* Dialog for Adding Expense */}\n      <Dialog open={isExpenseDialogOpen} onOpenChange={setIsExpenseDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Add an Expense</DialogTitle>\n          </DialogHeader>\n          <form onSubmit={handleAddExpenseSubmit}>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"expenseDescription\">Description</Label>\n                <Input\n                  id=\"expenseDescription\"\n                  value={expenseDescription}\n                  onChange={(e) => setExpenseDescription(e.target.value)}\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"expenseAmount\">Amount</Label>\n                <Input\n                  id=\"expenseAmount\"\n                  type=\"number\"\n                  value={expenseAmount}\n                  onChange={(e) => setExpenseAmount(parseFloat(e.target.value))}\n                  required\n                />\n              </div>\n              <div>\n                <Label>Split with</Label>\n                <div className=\"space-y-2\">\n                  {groupBalances.map((user) => (\n                    <div key={user.id} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id={`user-${user.id}`}\n                        checked={selectedUsers.includes(user.name)}\n                        onCheckedChange={(checked) => {\n                          setSelectedUsers(\n                            checked\n                              ? [...selectedUsers, user.name]\n                              : selectedUsers.filter((name) => name !== user.name)\n                          );\n                        }}\n                      />\n                      <Label htmlFor={`user-${user.id}`}>{user.name}</Label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n            <DialogFooter className=\"mt-4\">\n              <Button type=\"submit\">Add Expense</Button>\n            </DialogFooter>\n          </form>\n        </DialogContent>\n      </Dialog>\n      <Button onClick={handleGroupBalances} className=\"hidden\">Update Group Balances</Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1062, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}